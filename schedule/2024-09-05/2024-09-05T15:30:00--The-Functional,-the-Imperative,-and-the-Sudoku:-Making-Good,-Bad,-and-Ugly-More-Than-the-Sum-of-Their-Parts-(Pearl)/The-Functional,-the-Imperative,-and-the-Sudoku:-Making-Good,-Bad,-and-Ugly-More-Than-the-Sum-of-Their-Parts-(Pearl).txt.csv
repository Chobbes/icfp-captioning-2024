Term,Pronunciation,Context / Example Usage,Notes,Count,Tags
Manuel Serrano,,,,2,Author
JavaScript,,,,38,Common-term programming-language
functional programming,,,,19,
recursive,,,,9,Common-term
array,,,,8,Common-term
expression,,,,7,Common-term
semantics,,,,7,
syntax,,,,5,Common-term
ACM,,Association for Computing Machinery,,4,
Boolean,,,,4,
Power,,,,3,
backtracking,,,,2,Common-term
Non-determinism,,,,2,Common-term
Why,,,,2,
abstraction,,,,1,Common-term
compiled,,,,1,
conclusion,,,,1,
concurrent,,,,1,Common-term
decomposition,,,,1,
discrete,,,,1,
filter,,,,1,
fork/join,,“fork/join parallelism”,,1,
instantiation,,,,1,
Java,,,,1,
modifier,,,,1,
modular,,,,1,Common-term
multiplicative,,,,1,
permissions@acm.org,,,,1,email
runtime,,,,1,Common-term
staging,,,,1,
syntactic,,,,1,Common-term
traversal,,,,1,Common-term
Esterel,,,,72,unclassified
hiphop,,,,50,unclassified
Sudoku,,,,38,unclassified
inout,,,,16,unclassified
cannots,,,,13,unclassified
"x,y",,,,12,unclassified
false,,,,11,unclassified
x.union(y,,,,11,unclassified
signal's,,,,10,unclassified
Esterel's,,,,9,unclassified
cell's,,,,8,unclassified
chute_len,,,,7,unclassified
iota.map(i,,,,6,unclassified
iota.map(j,,,,6,unclassified
coords,,,,5,unclassified
light(new,,,,5,unclassified
"phase(""green",,,,5,unclassified
"phase(""orange",,,,5,unclassified
"phase(""red",,,,5,unclassified
boolean-valued,,,,4,unclassified
c.i,,,,4,unclassified
c.j,,,,4,unclassified
nowval,,,,4,unclassified
preval,,,,4,unclassified
SudokuMachine,,,,4,unclassified
AUTHOR(S,,,,3,unclassified
d.i,,,,3,unclassified
d.j,,,,3,unclassified
ForkHouseMap,,,,3,unclassified
house's,,,,3,unclassified
lower-left,,,,3,unclassified
MustOtherCannot,,,,3,unclassified
MustThisCannot,,,,3,unclassified
s.nowval,,,,3,unclassified
"Set([""red",,,,3,unclassified
Array.from({length,,,,2,unclassified
BOARD_SIZE,,,,2,unclassified
coords.map(c,,,,2,unclassified
digits.size,,,,2,unclassified
e.i,,,,2,unclassified
e.j,,,,2,unclassified
Esterel-style,,,,2,unclassified
filter(d,,,,2,unclassified
fork...par,,,,2,unclassified
ForkHouseMap(coords,,,,2,unclassified
ForkHouseMap(MustOtherCannot,,,,2,unclassified
HoDoKu,,,,2,unclassified
iota.flatMap(i,,,,2,unclassified
iota.map,,,,2,unclassified
map(d,,,,2,unclassified
newGivens,,,,2,unclassified
newSignals,,,,2,unclassified
non-local,,,,2,unclassified
proc(iota.map(j,,,,2,unclassified
reset.nowval,,,,2,unclassified
right-most,,,,2,unclassified
s(true,,,,2,unclassified
"Set([""green",,,,2,unclassified
set-valued,,,,2,unclassified
SudokuObserver,,,,2,unclassified
this[cannot${i}${j}].nowval,,,,2,unclassified
this[must${i}${j}].nowval.size,,,,2,unclassified
TL1,,,,2,unclassified
unsolved(new,,,,2,unclassified
upper-right,,,,2,unclassified
well-structured,,,,2,unclassified
A)Syncronous,,,,1,unclassified
Array.from,,,,1,unclassified
backquotes,,,,1,unclassified
c_cannot,,,,1,unclassified
c_cannot.equal(d_cannot,,,,1,unclassified
c_cannot.size,,,,1,unclassified
c_must,,,,1,unclassified
cannot${i}${j,,,,1,unclassified
cans.nowval.size,,,,1,unclassified
coords.map(ignored,,,,1,unclassified
d_cannot,,,,1,unclassified
digits.difference,,,,1,unclassified
digits.difference(c_cannot,,,,1,unclassified
driver(mach,,,,1,unclassified
Dumitru,,,,1,unclassified
es.nowval,,,,1,unclassified
"ew.nowval.has(""red",,,,1,unclassified
failed(true,,,,1,unclassified
filter(c,,,,1,unclassified
filter(e,,,,1,unclassified
flatMap,,,,1,unclassified
Garns,,,,1,unclassified
Gonthier,,,,1,unclassified
hh.ReactiveMachine(TL1,,,,1,unclassified
HipHop's,,,,1,unclassified
HipHop.js,,,,1,unclassified
Hobiger,,,,1,unclassified
Hughes's,,,,1,unclassified
"i,j)th",,,,1,unclassified
ignored.i,,,,1,unclassified
ignored.j,,,,1,unclassified
in-depth,,,,1,unclassified
iota.length,,,,1,unclassified
language--functions,,,,1,unclassified
LiarParadox,,,,1,unclassified
light1,,,,1,unclassified
light1.react,,,,1,unclassified
light}(new,,,,1,unclassified
loop's,,,,1,unclassified
m.size,,,,1,unclassified
mach.react(givens,,,,1,unclassified
mach.react({reset,,,,1,unclassified
map(c,,,,1,unclassified
map(e,,,,1,unclassified
mashup,,,,1,unclassified
Math.floor(i,,,,1,unclassified
Math.floor(j,,,,1,unclassified
Math.sqrt(iota.length,,,,1,unclassified
Multitier,,,,1,unclassified
must.intersection(cannot).size,,,,1,unclassified
must.size,,,,1,unclassified
must00,,,,1,unclassified
must01,,,,1,unclassified
must02,,,,1,unclassified
newGivens[must${i}${j,,,,1,unclassified
newSignals.status,,,,1,unclassified
non-given,,,,1,unclassified
non-overlapping,,,,1,unclassified
ns.nowval,,,,1,unclassified
"ns.nowval.has(""red",,,,1,unclassified
o.x,,,,1,unclassified
Object.assign,,,,1,unclassified
out-of-thin-air,,,,1,unclassified
owner/author(s,,,,1,unclassified
Potop-Butucaru,,,,1,unclassified
proc(iota.map(i,,,,1,unclassified
progress(false,,,,1,unclassified
progress(true,,,,1,unclassified
progress.nowval,,,,1,unclassified
reset(false,,,,1,unclassified
Set([color,,,,1,unclassified
Set([d,,,,1,unclassified
Set(iota.map(v,,,,1,unclassified
signals.status,,,,1,unclassified
signals.unsolved.first,,,,1,unclassified
status's,,,,1,unclassified
"status(""progress",,,,1,unclassified
"status(""reject",,,,1,unclassified
"status(""solved",,,,1,unclassified
"status(""stall",,,,1,unclassified
Sudoku-solving,,,,1,unclassified
SudokuHiddenSingle,,,,1,unclassified
SudokuNakedPair,,,,1,unclassified
SudokuNakedSingle,,,,1,unclassified
synchornous,,,,1,unclassified
this[must${c.i}${c.j}].nowval,,,,1,unclassified
this[must${i}${j,,,,1,unclassified
this[must${i}${j}].nowval,,,,1,unclassified
this[must${i}${j}].preval.size,,,,1,unclassified
thisSignalIsFalse,,,,1,unclassified
thisSignalIsFalse(true,,,,1,unclassified
thisSignalIsFalse.nowval,,,,1,unclassified
TL2,,,,1,unclassified
TL3,,,,1,unclassified
TL4,,,,1,unclassified
TL5,,,,1,unclassified
TL6,,,,1,unclassified
unioning,,,,1,unclassified
unsolved's,,,,1,unclassified
unsolved.nowval.size,,,,1,unclassified
x.intersection(y,,,,1,unclassified
